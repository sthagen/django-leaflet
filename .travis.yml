sudo: required
language: python
cache: pip

addons:
  postgresql: '10'
  apt:
    packages:
      - postgresql-10-postgis-2.5
      - postgresql-10-postgis-2.5-scripts

matrix:
  fast_finish: true
  include:
    - { python: "3.7", env: DJANGO=2.2 DATABASE=sqlite SPATIALITE_LIBRARY_PATH='mod_spatialite' }

    - { python: "3.4", env: DJANGO=1.11 DATABASE=postgres }
    - { python: "3.5", env: DJANGO=1.11 DATABASE=postgres }
    - { python: "3.6", env: DJANGO=1.11 DATABASE=postgres }
    - { python: "3.7", env: DJANGO=1.11 DATABASE=postgres }

    - { python: "3.4", env: DJANGO=2.0 DATABASE=postgres }
    - { python: "3.5", env: DJANGO=2.0 DATABASE=postgres }
    - { python: "3.6", env: DJANGO=2.0 DATABASE=postgres }
    - { python: "3.7", env: DJANGO=2.0 DATABASE=postgres }

    - { python: "3.5", env: DJANGO=2.1 DATABASE=postgres }
    - { python: "3.6", env: DJANGO=2.1 DATABASE=postgres }
    - { python: "3.7", env: DJANGO=2.1 DATABASE=postgres }

    - { python: "3.5", env: DJANGO=2.2 DATABASE=postgres }
    - { python: "3.6", env: DJANGO=2.2 DATABASE=postgres }
    - { python: "3.7", env: DJANGO=2.2 DATABASE=postgres }

    - { python: "3.6", env: DJANGO=3.0 DATABASE=postgres }
    - { python: "3.7", env: DJANGO=3.0 DATABASE=postgres }
    - { python: "3.8", env: DJANGO=3.0 DATABASE=postgres }

    - { python: "3.5", env: DJANGO=master DATABASE=postgres }
    - { python: "3.6", env: DJANGO=master DATABASE=postgres }
    - { python: "3.7", env: DJANGO=master DATABASE=postgres }


  allow_failures:
    - env: DJANGO=master DATABASE=postgres

before_install:
  - sudo apt-get update

install:
 # GeoDjango dependencies
 - sudo apt-get update -qq
 - sudo apt-get install -y libproj-dev libgeos-dev

 - if [[ $DATABASE == sqlite ]]; then sudo apt-get install -y libspatialite-dev libsqlite3-mod-spatialite; fi

 - pip install tox tox-travis flake8
 - npm install leaflet/tests/

 - pip freeze
 - dpkg -l

before_script:
 - flake8 --ignore=E501,W504 leaflet
 - if [[ $DATABASE == postgres ]]; then psql -c 'create database test_db;' -U postgres; fi
 - if [[ $DATABASE == postgres ]]; then psql -c 'CREATE EXTENSION postgis;' -U postgres -d test_db; fi

script:
 - tox
 - node --version
 - node node_modules/mocha-phantomjs/bin/mocha-phantomjs leaflet/tests/index.html

after_success:
 - pip install coveralls
 - coveralls
